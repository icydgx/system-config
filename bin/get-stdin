#!/bin/bash
set -e

prompt=
TEMP=$(getopt -o p: --long prompt: -n $(basename $0) -- "$@")
eval set -- "$TEMP"
while true; do
    case "$1" in
        -p|--prompt)
            prompt=$2
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done

test $# = 0 -o $# = 1
tmp=/tmp/`basename $0`.$$
if test "$USE_BUFFER_NAME"; then
    tmp=/tmp/$USE_BUFFER_NAME
    exec 9>/tmp/$USE_BUFFER_NAME.lock
    if ! flock -n 9; then
        set -x
        (
            find-or-exec emacs
            emacsclient -e '(progn (switch-to-buffer "'$USE_BUFFER_NAME'") (toggle-input-method t))' >/dev/null 2>&1
            ps.tree $$
        ) >/dev/null 2>&1
        kill $(get-ppid|tail -n 1) >/dev/null 2>&1
    fi
fi
touch $tmp

if test "$prompt"; then
    cat <<EOF >> $tmp

###start of comment###
"$prompt"
# Local variables:
# whitespace-cleanup-mode: nil
# End:
EOF
elif tty >/dev/null 2>&1 || test $# = 1; then
    test $# = 1 -a "$1" != $tmp && cat $1 > $tmp
else
    cat > $tmp
fi

echo -n Edit it... 1>&2
edit-wait $tmp >/dev/null 2>&1
echo " done" 1>&2
function get-rid-of-comment() {
    cat "$@" | perl -ne '
BEGIN {
    if ($ENV{USE_BUFFER_NAME}) {
        open($out, ">", "/tmp/$ENV{USE_BUFFER_NAME}.out");
    }
}
if (m/###start of comment###/) { $comment = 1; }
if (not $comment) {
    print;
    if ($ENV{USE_BUFFER_NAME}) {
        if (m/^$/) {print $out "â€‹" unless 1..1}
        chomp;
        print $out "\n" unless 1..1;
        print $out $_;
    }
}
'
}
if test "`get-rid-of-comment $tmp | perl -npe 's/\s//g' | wc -c`" == 0; then
    if ! ps.pl emacs.mm >/dev/null 2>&1; then
        exit -1
    fi
    if EMACS=t yes-or-no-p -y "Error: input can not be empty, try again?"; then
        if test "$USE_BUFFER_NAME"; then
            cp /tmp/"$USE_BUFFER_NAME".1 /tmp/"$USE_BUFFER_NAME"
        fi
        exec get-stdin $tmp
    fi
fi
get-rid-of-comment $tmp
if test "$USE_BUFFER_NAME"; then
    (
        cd /tmp
        for x in $(seq 5 -1 2); do
            mv "$USE_BUFFER_NAME".$((x - 1)) "$USE_BUFFER_NAME".$x >/dev/null 2>&1 || true
        done

        mv "$USE_BUFFER_NAME" "$USE_BUFFER_NAME".1
    )
fi

rm $tmp
